{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "CreatePollForm.svelte",
    "Footer.svelte",
    "Header.svelte",
    "PollDetails.svelte",
    "PollList.svelte",
    "UserDetails.svelte",
    "UserList.svelte",
    "Button.svelte",
    "Card.svelte",
    "Tabs.svelte"
  ],
  "sourcesContent": [
    "<script>\n\timport Header from './components/Header.svelte'\n\timport Footer from './components/Footer.svelte'\n\timport Tabs from './shared/Tabs.svelte'\n\timport CreatePollForm from './components/CreatePollForm.svelte'\n\timport PollList from './components/PollList.svelte'\n\timport UserList from './components/UserList.svelte'\n\n\tlet items = ['Current Polls', 'Add new Poll', 'Users', 'Add new User']\n\tlet activeItem = 'Current Polls'\n\n\tconst tabChange = (e) => {\n\t\tactiveItem = e.detail\n\t}\n\n\tconst handleAdd = (e) => {\n\t\tactiveItem = 'Current Polls'\n\t}\n\n</script>\n\n\n<Header/>\n<main>\n\t<Tabs items={items} activeItem={activeItem} on:tabChange={tabChange} />\n\t{#if activeItem === 'Current Polls'}\n\t\t<PollList />\n\t{:else if activeItem === 'Add new Poll'}\n\t\t<CreatePollForm on:add={handleAdd} />\n\t{:else if activeItem === 'Users'}\n\t\t<UserList />\n\t{:else if activeItem === 'Add New User'}\n\t\t<p>test</p>\n\t{/if}\n</main>\n<Footer/>\n\n<style>\n\tmain {\n\t\tmax-width: 960px;\n\t\tmargin: 40px auto;\n\t}\n</style>\n",
    "<script>\n    import PollStore from '../stores/PollStore.js'\n    import { createEventDispatcher } from 'svelte'\n    let dispatch = createEventDispatcher()\n    import Button from '../shared/Button.svelte'\n\n    let fields = { question: '', answerA: '', answerB: ''}\n    let errors = { question: '', answerA: '', answerB: ''}\n    let valid = false\n\n    const submitHandler = () => {\n        valid = true\n        // Validate question\n        if(fields.question.trim().length < 5){\n            valid = false\n            errors.question = \"Question must be at least 5 characters long\"\n        } else {\n            errors.question = ''\n        }\n        // Validate answerA\n        if(fields.answerA.trim().length < 1){\n            valid = false\n            errors.answerA = \"Answer A cannot be empty\"\n        } else {\n            errors.answerA = ''\n        }\n        // Validate answerA\n        if(fields.answerB.trim().length < 1){\n            valid = false\n            errors.answerB = \"Answer A cannot be empty\"\n        } else {\n            errors.answerB = ''\n        }\n        //\n        if(valid){\n            let poll = {...fields, votesA: 0, votesB: 0, id: Math.random()}\n            // save poll to Store\n            PollStore.update((currentPolls) => {\n                return [poll, ...currentPolls]\n            })\n            dispatch('add')\n        }\n    }\n</script>\n\n\n<form on:submit|preventDefault={submitHandler}>\n    <div class=\"form-field\">\n        <label for=\"question\">Poll Question</label>\n        <input type=\"text\" id=\"question\" bind:value={fields.question}>\n        <div class=\"error\">{errors.question}</div>\n    </div>\n    <div class=\"form-field\">\n        <label for=\"answer-a\">Answer A</label>\n        <input type=\"text\" id=\"answer-a\" bind:value={fields.answerA}>\n        <div class=\"error\">{errors.answerA}</div>\n    </div>\n    <div class=\"form-field\">\n        <label for=\"answer-b\">Answer B</label>\n        <input type=\"text\" id=\"answer-b\" bind:value={fields.answerB}>\n        <div class=\"error\">{errors.answerB}</div>\n    </div>\n    <Button type=\"secondary\" flat={true} inverse={false}>Add Poll</Button>\n</form>\n\n\n<style>\n    form {\n        width: 400px;\n        margin: 0 auto;\n        text-align: center;\n    }\n    .form-field {\n        margin: 18px auto;\n    }\n    input {\n        width: 100%;\n        border-radius: 6px;\n    }\n    label {\n        margin: 10px auto;\n        text-align: left;\n    }\n    .error {\n        font-weight: 700;\n        font-size: 12px;\n        color: #d91b42;\n    }\n</style>\n",
    "<footer>\n    <div class=\"copyright\">Copyright 2020 @ dimitriskl</div>\n</footer>\n\n<style>\n    footer {\n        padding: 40px 40px 0px 40px;\n        text-align: center;\n    }\n    .copyright {\n        color: #aaaaaa;\n        font-size: 14px;\n        display: inline-block;\n        padding: 20px;\n        border-top: 1px solid #dddddd;\n    }\n</style>\n",
    "<script></script>\n\n\n<header>\n    <h1>\n        <img src=\"/images/logo.svg\" alt=\"Poll Ninja Logo\">\n    </h1>\n</header>\n\n\n<style>\n    header {\n        background: #f7f7f7;\n        padding: 20px;\n    }\n    h1 {\n        margin: 0;\n        text-align: center;\n    }\n    img {\n        max-width: 180px;\n    }\n</style>\n",
    "<script>\n    import PollStore from '../stores/PollStore.js'\n    import Card from '../shared/Card.svelte'\n    import Button from '../shared/Button.svelte'\n    import { tweened } from 'svelte/motion'\n\n    export let poll\n\n    $: totalVotes = poll.votesA + poll.votesB\n    $: percentA = Math.floor(100 / totalVotes * poll.votesA) || 0;\n    $: percentB = Math.floor(100 / totalVotes * poll.votesB) || 0;\n\n    const tweenedA = tweened(0)\n    const tweenedB = tweened(0)\n    $: tweenedA.set(percentA)\n    $: tweenedB.set(percentB)\n\n    const handleVote = (option, id) => {\n        PollStore.update((currentPolls) => {\n            let copiedPolls = [...currentPolls]\n    \t\tlet upvotedPoll = copiedPolls.find((poll) => poll.id == id)\n\n    \t\tif(option === 'a'){\n    \t\t\tupvotedPoll.votesA++\n    \t\t}\n    \t\tif(option === 'b'){\n    \t\t\tupvotedPoll.votesB++\n    \t\t}\n\n    \t\treturn copiedPolls\n        })\n    }\n\n    const handleDelete = (id) => {\n        PollStore.update((currentPolls) => {\n            return currentPolls.filter(poll => poll.id != id)\n        })\n    }\n</script>\n\n<Card>\n    <div class=\"poll\">\n        <h3>{poll.question}</h3>\n        <p>Total votes: {totalVotes}</p>\n        <div class=\"answer\" on:click={() => handleVote('a', poll.id)}>\n            <div class=\"percent percent-a\" style=\"width: {$tweenedA}%\"></div>\n            <span>{poll.answerA} ({poll.votesA})</span>\n        </div>\n        <div class=\"answer\" on:click={() => handleVote('b', poll.id)}>\n            <div class=\"percent percent-b\" style=\"width: {$tweenedB}%\"></div>\n            <span>{poll.answerB} ({poll.votesB})</span>\n        </div>\n        <div class=\"delete\">\n            <Button type=\"primary\" flat={true} inverse={false} on:click={() => handleDelete(poll.id)}>Delete</Button>\n        </div>\n    </div>\n</Card>\n\n<style>\n    h3 {\n        margin: 0 auto;\n        color: #555;\n    }\n    p {\n        margin-top: 6px;\n        font-size: 14px;\n        color: #aaa;\n        margin-bottom: 30px;\n    }\n    .answer {\n        background: #fafafa;\n        cursor: pointer;\n        margin: 10px auto;\n        position: relative;\n    }\n    .answer:hover {\n        opacity: 0.6;\n    }\n    span {\n        display: inline-block;\n        padding: 10px 20px;\n    }\n    .percent {\n        height: 100%;\n        position: absolute;\n        box-sizing: border-box;\n    }\n    .percent-a {\n        border-left: 4px solid #d91b42;\n        background-color: rgba(217, 27, 66, 0.2);\n    }\n    .percent-b {\n        border-left: 4px solid #45c496;\n        background-color: rgba(69, 196, 150, 0.2);\n    }\n    .delete {\n        margin-top: 30px;\n        text-align: center;\n    }\n</style>\n",
    "<script>\n    //import { onMount, onDestroy } from 'svelte'\n    import { fade, slide, scale } from 'svelte/transition'\n    import { flip } from 'svelte/animate'\n    import PollStore from '../stores/PollStore.js'\n    import PollDetails from './PollDetails.svelte'\n\n    //export let polls = []\n\n    /*\n    const unsub = PollStore.subscribe((data) => {\n        polls = data\n    })\n\n    onMount(() => {\n        // get data from db here\n        console.log('Component mounted')\n    })\n\n    onDestroy(() => {\n        // unsub from Store\n        unsub()\n        console.log('Component destroyed')\n    })\n    */\n\n</script>\n\n\n<div class=\"poll-list\">\n    {#each $PollStore as poll (poll.id)}\n        <div in:fade out:scale|local animate:flip={{duration: 500}}>\n            <PollDetails poll={poll} />\n        </div>\n    {/each}\n</div>\n\n\n<style>\n    .poll-list {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        grid-gap: 20px;\n    }\n</style>\n",
    "<script>\n    import UserStore from '../stores/UserStore.js'\n    import Card from '../shared/Card.svelte'\n    import Button from '../shared/Button.svelte'\n\n    export let user\n\n    const handleDelete = async(username) => {\n\n        const url = 'http://localhost:4000/u/' + username\n        const response = await fetch(url, {\n            method: 'DELETE',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        if(response.ok){\n            UserStore.update((currentUsers) => {\n                return currentUsers.filter(user => user.username != username)\n            })\n        }\n    }\n</script>\n\n\n<Card>\n    <div class=\"user\">\n        <h3>{user.username}</h3>\n        <p>ID: {user._id.$oid}</p>\n        <p>Created: {user.dateCreated}</p>\n        <p>Latest update: {user.dateUpdated}</p>\n        <div class=\"delete\">\n            <Button type=\"primary\" flat={true} inverse={false} on:click={() => handleDelete(user.username)}>Delete</Button>\n        </div>\n    </div>\n</Card>\n\n<style>\n    h3 {\n        margin: 5px auto 15px auto;\n        color: #555555;\n    }\n    p {\n        margin-top: 6px;\n        font-size: 14px;\n        color: #aaaaaa;\n        margin-bottom: 10px;\n    }\n    .answer {\n        background: #fafafa;\n        cursor: pointer;\n        margin: 10px auto;\n        position: relative;\n    }\n    .answer:hover {\n        opacity: 0.6;\n    }\n    span {\n        display: inline-block;\n        padding: 10px 20px;\n    }\n    .percent {\n        height: 100%;\n        position: absolute;\n        box-sizing: border-box;\n    }\n    .percent-a {\n        border-left: 4px solid #d91b42;\n        background-color: rgba(217, 27, 66, 0.2);\n    }\n    .percent-b {\n        border-left: 4px solid #45c496;\n        background-color: rgba(69, 196, 150, 0.2);\n    }\n    .delete {\n        margin-top: 30px;\n        text-align: center;\n    }\n</style>\n",
    "<script>\n    import { onMount, onDestroy } from 'svelte'\n    import { fade, slide, scale } from 'svelte/transition'\n    import { flip } from 'svelte/animate'\n    //import { users, fetchUsers } from '../stores/UserStore.js'\n    import UserStore from '../stores/UserStore.js'\n    import UserDetails from './UserDetails.svelte'\n\n    export let users = []\n\n    const unsub = UserStore.subscribe((data) => {\n        users = data\n    })\n\n    onMount(async () => {\n        const url = 'http://localhost:4000/u/'\n        const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        })\n        if(response.ok){\n            const data = await response.json()\n            console.log(data)\n            UserStore.update((currentUsers) => {\n                return data\n            })\n        }\n    })\n\n    onDestroy(() => {\n        // unsub from Store\n        unsub()\n    })\n\n\n</script>\n\n\n<div class=\"user-list\">\n    {#each $UserStore as user (user._id)}\n        <div in:fade out:scale|local animate:flip={{duration: 500}}>\n            <UserDetails user={user} />\n        </div>\n    {/each}\n</div>\n\n\n<style>\n    .user-list {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        grid-gap: 20px;\n    }\n</style>\n",
    "<script>\n    export let type = 'primary'\n    export let flat = false;\n    export let inverse = false;\n</script>\n\n\n<button class={type} class:flat={flat} class:inverse={inverse} on:click>\n    <slot></slot>\n</button>\n\n\n<style>\n    button {\n        border: 0;\n        cursor: pointer;\n        border-radius: 6px;\n        padding: 8px 12px;\n        font-weight: 700;\n        box-shadow: 1px 2px 3px rgba(0, 0, 0, 0.2);\n    }\n    .primary {\n        background-color: #d91b42;\n        color: #ffffff;\n    }\n    .secondary {\n        background-color: #45c496;\n        color: #ffffff;\n    }\n    .flat {\n        box-shadow: none;\n    }\n    .primary.inverse {\n        color: #d91b42;\n        background-color: #ffffff;\n        border: 2px solid #d91b42;\n    }\n    .secondary.inverse {\n        color: #45c496;\n        background-color: #ffffff;\n        border: 2px solid #45c496;\n    }\n</style>\n",
    "<div class=\"card\">\n    <slot></slot>\n</div>\n\n\n<style>\n    .card {\n        background-color: #ffffff;\n        padding: 20px;\n        border-radius: 6px;\n        box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);\n    }\n</style>\n",
    "<script>\n    import { createEventDispatcher } from 'svelte'\n    const dispatch = createEventDispatcher()\n\n    export let items;\n    export let activeItem;\n</script>\n\n<div class=\"tabs\">\n    <ul>\n        {#each items as item}\n            <li on:click={() => dispatch('tabChange', item)}>\n                <div class:active={item === activeItem}>{item}</div>\n            </li>\n        {/each}\n    </ul>\n</div>\n\n<style>\n    .tabs {\n        margin-bottom: 40px;\n    }\n    ul {\n        display: flex;\n        justify-content: center;\n        padding: 0;\n        list-style-type: none;\n    }\n    li {\n        margin: 0 16px;\n        font-size: 18px;\n        color: #555555;\n        cursor: pointer;\n    }\n    .active {\n        color: #d91b42;\n        border-bottom: 2px solid #d91b42;\n        padding-bottom: 8px;\n    }\n</style>\n"
  ],
  "names": [],
  "mappings": "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"
}